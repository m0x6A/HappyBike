/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uppgift4;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;

/**
 *
 * @author xdr
 */
public class HappyCrudGui extends javax.swing.JFrame {

	private File currentFile;
	private BikeList myBikeList;
	private BikeListModel myBikeListModel;
	private Bike currentBike;

	/**
	 * Creates new form HappyCrudGui
	 */
	public HappyCrudGui() {
		initComponents();
		myBikeListModel = new BikeListModel();
		bikeList.setModel(myBikeListModel);
		myBikeList = new BikeList();
		myBikeListModel.setBikeList(myBikeList);
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jSplitPane1 = new javax.swing.JSplitPane();
                bikeListPane = new javax.swing.JScrollPane();
                bikeList = new javax.swing.JList();
                currentBikePane = new javax.swing.JPanel();
                nameTextField = new javax.swing.JTextField();
                wheelSizeTextField = new javax.swing.JTextField();
                weightTextField = new javax.swing.JTextField();
                typeTextField = new javax.swing.JTextField();
                colorTextField = new javax.swing.JTextField();
                deleteButton = new javax.swing.JButton();
                addButton = new javax.swing.JButton();
                updateButton = new javax.swing.JButton();
                kmTextField = new javax.swing.JTextField();
                colorLabel = new javax.swing.JLabel();
                nameLabel = new javax.swing.JLabel();
                typeLabel = new javax.swing.JLabel();
                kmLabel = new javax.swing.JLabel();
                weightLabel = new javax.swing.JLabel();
                wheelSizeLabel = new javax.swing.JLabel();
                clearButton = new javax.swing.JButton();
                bikeListLabel = new javax.swing.JLabel();
                currentBikeLabel = new javax.swing.JLabel();
                happyMenuBar = new javax.swing.JMenuBar();
                happyCrudMenu = new javax.swing.JMenu();
                openMenuItem = new javax.swing.JMenuItem();
                saveMenuItem = new javax.swing.JMenuItem();
                saveAsMenuItem = new javax.swing.JMenuItem();
                exitMenuItem = new javax.swing.JMenuItem();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setMinimumSize(new java.awt.Dimension(600, 300));
                setName("HappyCrudGui"); // NOI18N
                setPreferredSize(new java.awt.Dimension(630, 400));

                jSplitPane1.setDividerLocation(150);

                bikeList.setModel(new javax.swing.AbstractListModel() {
                        String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                        public int getSize() { return strings.length; }
                        public Object getElementAt(int i) { return strings[i]; }
                });
                bikeList.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                bikeListMouseClicked(evt);
                        }
                });
                bikeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                                bikeListValueChanged(evt);
                        }
                });
                bikeListPane.setViewportView(bikeList);

                jSplitPane1.setLeftComponent(bikeListPane);

                nameTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                nameTextFieldActionPerformed(evt);
                        }
                });

                colorTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                colorTextFieldActionPerformed(evt);
                        }
                });

                deleteButton.setText("Delete");
                deleteButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                deleteButtonActionPerformed(evt);
                        }
                });

                addButton.setText("Add bike..");
                addButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                addButtonActionPerformed(evt);
                        }
                });

                updateButton.setText("Update");
                updateButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                updateButtonActionPerformed(evt);
                        }
                });

                colorLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
                colorLabel.setText("Color:");

                nameLabel.setText("Name:");

                typeLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
                typeLabel.setText("Type");

                kmLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
                kmLabel.setText("Km:");

                weightLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
                weightLabel.setText("Weight");

                wheelSizeLabel.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
                wheelSizeLabel.setText("Wheelsize: ");

                clearButton.setText("Clear");
                clearButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                clearButtonActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout currentBikePaneLayout = new javax.swing.GroupLayout(currentBikePane);
                currentBikePane.setLayout(currentBikePaneLayout);
                currentBikePaneLayout.setHorizontalGroup(
                        currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(currentBikePaneLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(currentBikePaneLayout.createSequentialGroup()
                                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(122, 122, 122)
                                                        .addComponent(updateButton))
                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, currentBikePaneLayout.createSequentialGroup()
                                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(kmLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(kmTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(weightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(wheelSizeTextField)
                                                                        .addComponent(wheelSizeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(clearButton))
                                                        .addGroup(currentBikePaneLayout.createSequentialGroup()
                                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(colorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(27, 27, 27)
                                                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(typeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                                                                .addGap(18, 18, 18)
                                                                .addComponent(addButton))
                                                        .addComponent(deleteButton))))
                                .addContainerGap(24, Short.MAX_VALUE))
                );
                currentBikePaneLayout.setVerticalGroup(
                        currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(currentBikePaneLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(nameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updateButton))
                                .addGap(25, 25, 25)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(colorLabel)
                                        .addComponent(typeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(colorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(typeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton)
                                .addGap(4, 4, 4)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(kmLabel)
                                        .addComponent(weightLabel)
                                        .addComponent(wheelSizeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(currentBikePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(kmTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(wheelSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(clearButton))
                                .addGap(48, 48, 48))
                );

                jSplitPane1.setRightComponent(currentBikePane);

                bikeListLabel.setText("Bikelist");

                currentBikeLabel.setText("Current bike");

                happyCrudMenu.setText("File");

                openMenuItem.setText("Open..");
                openMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                openMenuItemActionPerformed(evt);
                        }
                });
                happyCrudMenu.add(openMenuItem);

                saveMenuItem.setText("Save..");
                saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveMenuItemActionPerformed(evt);
                        }
                });
                happyCrudMenu.add(saveMenuItem);

                saveAsMenuItem.setText("Save as..");
                saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveAsMenuItemActionPerformed(evt);
                        }
                });
                happyCrudMenu.add(saveAsMenuItem);

                exitMenuItem.setText("Exit...");
                happyCrudMenu.add(exitMenuItem);

                happyMenuBar.add(happyCrudMenu);

                setJMenuBar(happyMenuBar);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(bikeListLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(currentBikeLabel)
                                .addGap(200, 200, 200))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(bikeListLabel)
                                        .addComponent(currentBikeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void bikeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bikeListMouseClicked
		// TODO add your handling code here:
        }//GEN-LAST:event_bikeListMouseClicked

        private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
		// TODO add your handling code here:
		int currentLine = bikeList.getSelectedIndex();
		currentBike = myBikeList.getBike(currentLine);
		Bike b = currentBike;
		b.setName(nameTextField.getText());
		b.setType(typeTextField.getText());
		b.setColor(colorTextField.getText());
		try {
			b.setKm(Integer.parseInt(kmTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only integers allowed.");

		}
		try {
			b.setWeight(Long.parseLong(weightTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only numbers and decimals allowed");

		}
		try {
			b.setWheelSize(Long.parseLong(wheelSizeTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only numbers and decimals allowed");

		}
		myBikeListModel.update();
        }//GEN-LAST:event_updateButtonActionPerformed

        private void colorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorTextFieldActionPerformed
		// TODO add your handling code here:
        }//GEN-LAST:event_colorTextFieldActionPerformed

        private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
		// TODO add your handling code here:
        }//GEN-LAST:event_nameTextFieldActionPerformed

        private void bikeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_bikeListValueChanged
		// TODO add your handling code here:
		if (!evt.getValueIsAdjusting()) {
			int currentLine = bikeList.getSelectedIndex();
			currentBike = myBikeList.getBike(currentLine);

			nameTextField.setText(currentBike.getName());
			colorTextField.setText(currentBike.getColor());
			typeTextField.setText(currentBike.getType());
			kmTextField.setText(Integer.toString(currentBike.getKm()));
			weightTextField.setText(Long.toString(currentBike.getWeight()));
			wheelSizeTextField.setText(Long.toString(currentBike.getWheelSize()));

		}
        }//GEN-LAST:event_bikeListValueChanged

        private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
		// TODO add your handling code here:
		JFileChooser fileChooser = new JFileChooser(new File("."));
		int result = fileChooser.showOpenDialog(this);
		if (result == JFileChooser.APPROVE_OPTION);
		{

			currentFile = fileChooser.getSelectedFile();
			
			try {
				myBikeList = HappyCrudUtility.readFromFile(currentFile);
			} catch (ParserConfigurationException | SAXException | IOException | NumberFormatException ex) {
				JOptionPane.showMessageDialog(this, "Something went wrong opening file.");
			} catch (IllegalArgumentException e){
				JOptionPane.showMessageDialog(this, "No file selected");
			}
			myBikeListModel.setBikeList(myBikeList);

		}
        }//GEN-LAST:event_openMenuItemActionPerformed

        private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
		// TODO add your handling code here:
		Bike b = new Bike();
		b.setName(nameTextField.getText());
		b.setType(typeTextField.getText());
		b.setColor(colorTextField.getText());
		try {
			b.setKm(Integer.parseInt(kmTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only integers allowed.");

		}
		try {
			b.setWeight(Long.parseLong(weightTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only numbers and decimals allowed");

		}
		try {
			b.setWheelSize(Long.parseLong(wheelSizeTextField.getText()));
		} catch (NumberFormatException e) {
			JOptionPane.showMessageDialog(this, "Only numbers and decimals allowed");

		}
		myBikeList.addBike(b);
		myBikeListModel.update();

        }//GEN-LAST:event_addButtonActionPerformed

        private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
		// TODO add your handling code here:
		nameTextField.setText("");
		colorTextField.setText("");
		typeTextField.setText("");
		kmTextField.setText("");
		weightTextField.setText("");
		wheelSizeTextField.setText("");
        }//GEN-LAST:event_clearButtonActionPerformed

        private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
		// TODO add your handling code here:
		try {
			int currentLine = bikeList.getAnchorSelectionIndex();
			myBikeList.removeBike(currentLine); 
			myBikeListModel.update();
		} catch (IndexOutOfBoundsException e) {
			JOptionPane.showMessageDialog(this, "No more bikes to remove.");
			
		}
        }//GEN-LAST:event_deleteButtonActionPerformed

        private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
		// TODO add your handling code here:
		try {
			HappyCrudUtility.writeToFile(myBikeList, currentFile);
		} catch (NumberFormatException | ParserConfigurationException | TransformerConfigurationException ex) {
			JOptionPane.showMessageDialog(this, "Something went wrong saving file.");

		} catch (TransformerException ex) {
			Logger.getLogger(HappyCrudGui.class.getName()).log(Level.SEVERE, null, ex);
		}
		myBikeListModel.setBikeList(myBikeList);
        }//GEN-LAST:event_saveMenuItemActionPerformed

        private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
		// TODO add your handling code here:
		JFileChooser fileChooser = new JFileChooser(new File("."));
		int result = fileChooser.showSaveDialog(this);
		if (result == JFileChooser.APPROVE_OPTION);
		{

			currentFile = fileChooser.getSelectedFile();
			try {
				HappyCrudUtility.writeToFile(myBikeList, currentFile);
			} catch (NumberFormatException | ParserConfigurationException | TransformerConfigurationException ex) {
				JOptionPane.showMessageDialog(this, "Something went wrong saving file.");

			} catch (TransformerException ex) {
				Logger.getLogger(HappyCrudGui.class.getName()).log(Level.SEVERE, null, ex);
			}
			myBikeListModel.setBikeList(myBikeList);

		}
        }//GEN-LAST:event_saveAsMenuItemActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(HappyCrudGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(HappyCrudGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(HappyCrudGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(HappyCrudGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new HappyCrudGui().setVisible(true);
			}
		});
	}

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton addButton;
        private javax.swing.JList bikeList;
        private javax.swing.JLabel bikeListLabel;
        private javax.swing.JScrollPane bikeListPane;
        private javax.swing.JButton clearButton;
        private javax.swing.JLabel colorLabel;
        private javax.swing.JTextField colorTextField;
        private javax.swing.JLabel currentBikeLabel;
        private javax.swing.JPanel currentBikePane;
        private javax.swing.JButton deleteButton;
        private javax.swing.JMenuItem exitMenuItem;
        private javax.swing.JMenu happyCrudMenu;
        private javax.swing.JMenuBar happyMenuBar;
        private javax.swing.JSplitPane jSplitPane1;
        private javax.swing.JLabel kmLabel;
        private javax.swing.JTextField kmTextField;
        private javax.swing.JLabel nameLabel;
        private javax.swing.JTextField nameTextField;
        private javax.swing.JMenuItem openMenuItem;
        private javax.swing.JMenuItem saveAsMenuItem;
        private javax.swing.JMenuItem saveMenuItem;
        private javax.swing.JLabel typeLabel;
        private javax.swing.JTextField typeTextField;
        private javax.swing.JButton updateButton;
        private javax.swing.JLabel weightLabel;
        private javax.swing.JTextField weightTextField;
        private javax.swing.JLabel wheelSizeLabel;
        private javax.swing.JTextField wheelSizeTextField;
        // End of variables declaration//GEN-END:variables
}
